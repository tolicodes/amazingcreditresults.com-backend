HOST: http://dev.amazingcreditresults.com/

--- Amazing Api V1 ---

-- Buyer authorization with cookie based sessions --

Authorize buyer by unique link. If link is valid, it responds with HTML page with form to set password,
if link is invalid, it redirects to error page with message, that link is invalid or outdated
GET /buyer/welcome/{apiKey}
< 200
< Content-Type: text/html
+++++
< 302
< Location: /buyer/error


Set password for buyer when he authorizes first time, than redirects back to page, where s/he has to enter password
POST /buyer/setPassword
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 | application/json; charset=utf-8
{ "apiKey": "someVeryLongApiKey", "password":"SomeNewPasswordToSet"}
< 302
< Location: /buyer/welcome/{apiKey}
+++++
< 400
< Content-Type: application/json; charset=utf-8


Authorize Buyer with password
POST /buyer/login
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 | application/json; charset=utf-8
{ "apiKey": "someVeryLongApiKey", "password":"SomeNewPasswordToSet"}
< 302
< Location: /buyer/welcome/{apiKey}


-- Buyer authorization with http header based session --

Verify, if this welcomeLink is valid - not outdated, have Buyer associated with it, etc...
GET /api/v1/buyer/needToSetPassword/:welcomeLink
< 200
< Content-Type: application/json; charset=utf-8
{"needToSetPassword":true}
+++++
< 200
< Content-Type: application/json; charset=utf-8
{"needToSetPassword":false}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{"Code":400,"Error":"Link is outdated!"}
+++++
< 404
< Content-Type: application/json; charset=utf-8
{"Code":404,"Error":"Link is not valid!"}


Set password on first time, when new Buyer follows the link in email message
POST /api/v1/buyer/setPassword
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 | application/json; charset=utf-8
{ "apiKey": "someVeryLongApiKey", "password":"SomeNewPasswordToSet"}
< 201
< Content-Type: application/json; charset=utf-8
{ "Code":201, "Success":"Password is set!" }
+++++
< 400
< Content-Type: application/json; charset=utf-8
{ "Code":400, "Error":"Wrong or outdated welcome link! Please, contact support for a new one!" }
+++++
< 400
< Content-Type: application/json; charset=utf-8
{ "Code":400, "Error":"Missed parameter - `apiKey` or `password`!" }

Authorize Buyer with password
POST /api/v1/buyer/login
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 | application/json; charset=utf-8
{ "apiKey": "someVeryLongApiKey", "password":"SomeNewPasswordToSet"}
< 201
< Content-Type: application/json; charset=utf-8
{ "Code":201, "Success":"Welcome!", "huntKey": "someVeryLongHuntKey" }
+++++
< 403
< Content-Type: application/json; charset=utf-8
{ "Code":403, "Error":"Unable to authorize - wrong password!"}
+++++
< 403
< Content-Type: application/json; charset=utf-8
{ "Code":403, "Error":"Unable to authorize - wrong welcome link!"}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{ "Code":400, "Error":"Missed parameter - `apiKey` or `password`!"}


-- Buyer/Owner profile json --

Get information about currently authenticated (by cookie based session) user
Additional info about sessionless authorization is published here https://bitbucket.org/ocelot/amazingcreditresults.com-backend
GET /auth/myself
< 200
< Content-Type: application/json; charset=utf-8
{
  "id": "536cfc8a886fcbba14d07dd5",
  "huntKey": "1fcfaecdc53ce05ac5aa0658a977931b77d28861799c9b0261af1d83d713d2ea910b7f110d8f76fe02748040903cd70cef7107357395125c9a2888100f0634a9",
  "email": "owner@example.org",
  "name": {},
  "gravatar": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
  "gravatar30": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=30&d=wavatar&r=g",
  "gravatar50": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=50&d=wavatar&r=g",
  "gravatar80": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
  "gravatar100": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=100&d=wavatar&r=g",
  "root": true,
  "accountVerified": false,
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "profile": {
    "needQuestionnaire":true
  }
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
  "error":"Authorization required!"
}


Get information about currently authenticated (by cookie based session) user
Additional info about sessionless authorization is published here https://bitbucket.org/ocelot/amazingcreditresults.com-backend
GET /api/v1/myself
< 200
< Content-Type: application/json; charset=utf-8
{
  "id": "536cfc8a886fcbba14d07dd5",
  "huntKey": "1fcfaecdc53ce05ac5aa0658a977931b77d28861799c9b0261af1d83d713d2ea910b7f110d8f76fe02748040903cd70cef7107357395125c9a2888100f0634a9",
  "email": "owner@example.org",
  "name": {},
  "gravatar": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
  "gravatar30": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=30&d=wavatar&r=g",
  "gravatar50": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=50&d=wavatar&r=g",
  "gravatar80": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
  "gravatar100": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=100&d=wavatar&r=g",
  "root": true,
  "accountVerified": false,
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "profile": {
    "needQuestionnaire":true
  }
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
  "error":"Authorization required!"
}


-- Buyer dashboard --

Buyer dashboard with questionary, propositions, cart, etc. SPA application. On this page buyer is redirected after succesefull login.
GET /buyer
< 200
< Content-Type: text/html


Saving Buyer answers to questions on dashboard
POST /api/v1/buyer/saveQuestionnaireAnswers
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 | application/json; charset=utf-8
{ "answer1": "1", "answer2":"2","answer3":"3"}
< 202
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name": {
    "familyName": "Doe",
    "givenName": "John",
    "middleName": ""
  },
  "profile": {
    "answer1": "1",
    "answer2": "2",
    "answer3": "3"
  },
  "root": false,
  "accountVerified": true
}


-- Owner api for header based authorization

Endpoint to retrieve huntKey
POST /api/v1/owner/login
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 application | application/json; charset=utf-8
{ "username":"owner@example.org", "password":"test123" }
< 200
{ "Code":200, "huntKey":"someRealyLongString" }
+++++
< 403
{ "Code":403, "Error":"Unable to authorize Owner with this credentials!" }
+++++
< 400
{ "Code":400, "Error":"The values of `username` or `password` are not provided!" }


-- Owner api for session based authorization

Form to enter login and password
GET /admin/login
< 200
< Content-Type: text/html


Form action for owners to authorize
POST /auth/login
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 application | application/json; charset=utf-8
{ "username":"owner@example.org", "password":"test123" }
< 302
< Location: /auth/success


Route to process successefull authorization (flash message with success description is added)
GET /auth/success
< 302
< Location: /


Route to process failed authorization (flash message with error description is added)
GET /auth/failure
< 302
< Location: /admin/login


-- Owner resource to edit clients --

List all clients - SPA application
GET /admin/clients
< 200
< Content-Type: text/html


List all clients in JSON format
GET /api/v1/admin/clients?page={:pageNumber}
< 200
< Content-Type: application/json
{
  "page": 1,
  "clients": [
    {
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false,
      "telefone":"555-339-69-72",
      "localAddress":"Gothem city",
      "needQuestionnaire":true,
      "title":"Mr."
    },
    {
      "id": "536cfc8a886fcbba14d07dd7",
      "email": "janedoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "Jane",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": true,
      "telefone":"555-339-69-72",
      "localAddress":"Gothem city",
      "needQuestionnaire":true,
      "title":"Mr."
    },
    {
      "id": "536cfc8a886fcbba14d07dd5",
      "email": "owner@example.org",
      "name": {},
      "gravatar": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=100&d=wavatar&r=g",
      "root": true,
      "accountVerified": false,
      "telefone":"555-339-69-72",
      "localAddress":"Gothem city",
      "needQuestionnaire":true,
      "title":"Mr."
    }
  ]
}

Owner gets one client by id
GET /api/v1/admin/clients/{:id}
< 200
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name": {
    "familyName": "Doe",
    "givenName": "John",
    "middleName": ""
  },
  "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
  "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
  "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
  "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
  "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
  "root": false,
  "accountVerified": false,
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "title":"Mr."
}


Owner updates buyer. The behavior is actually patch - the fields mentioned in accepted request are only updated. https://oselot.atlassian.net/browse/ACR-108
PUT /api/v1/admin/clients/{:id}
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 application | application/json; charset=utf-8
{"familyName" : "Doe", "givenName" : "John", "middleName" : "Theodor", "email":"johndoe@example.org","telefone":"555-339-69-72","localAddress":"Gothem city","needQuestionnaire":true, "title":"Mr."}
< 201
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name":{
    "givenName": "John",
    "middleName": "Theodor"
    "familyName": "Doe"
  },
  "profile": {
    "needQuestionnaire": true
  },
  "title":"Mr.",
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "root": false
}
+++++
< 404
< Content-Type: application/json
{
    "error":"User with this ID do not exists!"
}



Create new client
POST /api/v1/admin/clients
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 application | application/json; charset=utf-8
{"familyName" : "Doe", "givenName" : "John", "middleName" : "Theodor", "email":"johndoe@example.org","telefone":"555-339-69-72","localAddress":"Gothem city","title":"Mr.","needQuestionnaire":true}
< 202
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name":{
    "givenName": "John",
    "middleName": "Theodor"
    "familyName": "Doe"
  },
  "profile": {
    "needQuestionnaire": true
  },
  "title":"Mr.",
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "root": false
}

Send client notification email with welcome link
POST /api/v1/admin/clients/welcome/:id
< 201
< Content-Type: application/json
{
    "message":"sent",
    "user": {
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false
    },
    "welcomeLink": "http://localhost:3000/buyer/welcome/c87ad6d9054337007fc38c11b468facfa567b2534a2ca01608551cddf4aa69551b9aa3a4ec27f0bdeaa34b60a90233c86b951837338526612cc2a9075c272004"
}


Owner resets clients password and sends notification email with welcome link
POST /api/v1/admin/clients/resetPassword/:id
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 application | application/json; charset=utf-8
< 201
< Content-Type: application/json
{
    "message":"sent",
    "user": {
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false
    },
    "welcomeLink": "http://localhost:3000/buyer/welcome/c87ad6d9054337007fc38c11b468facfa567b2534a2ca01608551cddf4aa69551b9aa3a4ec27f0bdeaa34b60a90233c86b951837338526612cc2a9075c272004"
}


Owner can create other owners
POST /api/v1/admin/createOwner
> Content-Type: application/x-www-form-urlencoded; charset=utf-8 application | application/json; charset=utf-8
{"email":"owner123@example.org", "password":"lalala"}
< 201
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email":"owner123@example.org",
  "name": {
    "familyName": "",
    "givenName": "",
    "middleName": ""
  },
  "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
  "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
  "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
  "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
  "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
  "root": true,
  "accountVerified": true
}
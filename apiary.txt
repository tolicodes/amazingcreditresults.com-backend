HOST: http://dev.amazingcreditresults.com/

--- Amazing Api V1 ---

-- Buyer authorization with http header based session --

Verify, if this welcomeLink is valid - not outdated, have Buyer associated with it, etc...
GET /api/v1/buyer/needToSetPassword/:welcomeLink
< 200
< Content-Type: application/json; charset=utf-8
{
    "needToSetPassword": true,
    "name":{
        "familyName": "Doe",
        "middleName": "Theodor",
        "givenName": "John"
    }
}
+++++
< 200
< Content-Type: application/json; charset=utf-8
{
    "needToSetPassword": false,
    "name":{
        "familyName": "Doe",
        "middleName": "Theodor",
        "givenName": "John"
    }
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 400,
        "message": "Link is outdated!"
    }]
}
+++++
< 404
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 404,
        "message": "Link is not valid!"
    }]
}



Set password on first time, when new Buyer follows the link in email message
POST /api/v1/buyer/setPassword
> Content-Type: application/json; charset=utf-8
{ "apiKey": "someVeryLongApiKey", "password":"SomeNewPasswordToSet"}
< 201
< Content-Type: application/json; charset=utf-8
{ "Code":201, "Success":"Password is set!" }
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 400,
        "message": "Wrong or outdated welcome link! Please, contact support for a new one!"
    }]
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 400,
        "message": "Missed parameter - `apiKey`",
        "field":"apiKey"
    },
    {
        "code": 400,
        "message": "Missed parameter - `password`",
        "field":"password"
    }
    ]
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 400,
        "message": "Missed parameter - `apiKey`",
        "field":"apiKey"
    }
    ]
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    {
        "code": 400,
        "message": "Missed parameter - `password`",
        "field":"password"
    }
    ]
}


Authorize Buyer with password
POST /api/v1/buyer/login
> Content-Type: application/json; charset=utf-8
{ "apiKey": "someVeryLongApiKey", "password":"SomeNewPasswordToSet"}
< 201
< Content-Type: application/json; charset=utf-8
{ "Code":201, "Success":"Welcome!", "huntKey": "someVeryLongHuntKey" }
+++++
< 403
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 403,
        "message": "Unable to authorize - wrong password!",
        "field":"password"
    }]
}
+++++
< 403
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 403,
        "message": "Unable to authorize - wrong welcome link!",
        "field":"password"
    }]
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 400,
        "message": "Missed parameter - `password`",
        "field":"password"
    },
    {
        "code": 400,
        "message": "Missed parameter - `apiKey`",
        "field":"password"
    }]
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [
    {
        "code": 400,
        "message": "Missed parameter - `apiKey`",
        "field":"password"
    }]
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
    "status": "Error",
    "errors": [{
        "code": 400,
        "message": "Missed parameter - `password`",
        "field":"password"
    }]
}



-- Buyer/Owner profile json --

Get information about currently authenticated (by cookie or header based session) user
Additional info about sessionless authorization is published here https://bitbucket.org/oselot/amazingcreditresults.com-backend
GET /api/v1/myself
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json; charset=utf-8
{
  "id": "536cfc8a886fcbba14d07dd5",
  "huntKey": "1fcfaecdc53ce05ac5aa0658a977931b77d28861799c9b0261af1d83d713d2ea910b7f110d8f76fe02748040903cd70cef7107357395125c9a2888100f0634a9",
  "email": "owner@example.org",
  "name": {
    "givenName": "Jean Batist",
    "middleName": "Emmanuele",
    "familyName": "Zorg"
  },
  "gravatar": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
  "gravatar30": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=30&d=wavatar&r=g",
  "gravatar50": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=50&d=wavatar&r=g",
  "gravatar80": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
  "gravatar100": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=100&d=wavatar&r=g",
  "root": true,
  "accountVerified": false,
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "roles":{
    "owner":true,
    "buyer":false,
    "seller":false
  },
  "profile": {
    "needQuestionnaire":true,
    "answer1": "1",
    "answer2": "2",
    "answer3": "3"
  }
}
+++++
< 400
< Content-Type: application/json; charset=utf-8
{
  "Error":"Authorization required!"
}


-- Buyer dashboard --

Saving Buyer answers to questions on dashboard
POST /api/v1/buyer/saveQuestionnaireAnswers
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json; charset=utf-8
{ "answer1": "1", "answer2":"2", "answer3":"3", "needQuestionnaire":true,}
< 202
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name": {
    "familyName": "Doe",
    "givenName": "John",
    "middleName": ""
  },
  "profile": {
    "needQuestionnaire": true,
    "answer1": "1",
    "answer2": "2",
    "answer3": "3"
  },
  "root": false,
  "accountVerified": true
}


Get list of tradelines avaible for this Buyer (Buyer can see only active tradelines, with some fields hidden)
GET /api/v1/tradelines
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "metaData": {
        "totalPages": 1,
        "page": 1
    },
    "data": [
        {
            "id": "5387c1c7a1e6fd5948e266cc",
            "seller": "5370a4fa25777db9531ffa91",
            "dateOpen": "2014-05-29T23:24:55.294Z",
            "availableAus": 15,
            "product": {
                "id": "53876e1e6b7719ef3102521e",
                "name": "Gemoroi 0",
                "bank": "Sperbank (testing)",
                "reportsToExperian": false,
                "reportsToEquifax": false,
                "reportsToTransunion": false,
                "ncRating": "None",
                "bcRating": "None",
                "moRating": "None",
                "type": "MasterCard"
            },
            "price": 1100,
            "ncRating": "Bronze",
            "bcRating": "Bronze",
            "moRating": "Bronze"
        },
        {
            "id": "5387c1c7a1e6fd5948e266cd",
            "seller": "5370a4fa25777db9531ffa91",
            "dateOpen": "2014-05-29T23:24:55.294Z",
            "availableAus": 15,
            "product": {
                "id": "53876e1e6b7719ef3102521e",
                "name": "Gemoroi 0",
                "bank": "Sperbank (testing)",
                "reportsToExperian": false,
                "reportsToEquifax": false,
                "reportsToTransunion": false,
                "ncRating": "None",
                "bcRating": "None",
                "moRating": "None",
                "type": "MasterCard"
            },
            "price": 1100,
            "ncRating": "Bronze",
            "bcRating": "Bronze",
            "moRating": "Bronze"
        }
   ]
}
+++++
< 401
< Content-Type: application/json
{"Code":401, "Error":"Authorization required"}



-- Owner api for header based authorization

Endpoint to retrieve huntKey
POST /api/v1/owner/login
> Content-Type: application/json; charset=utf-8
{ "username":"owner@example.org", "password":"test123" }
< 200
{
    "Code":200,
    "huntKey":"someRealyLongString",
    "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
    }
}
+++++
< 403
{
"status": "Error",
"errors": [{
  "code": 403,
  "message": "Unable to authorize Owner with this credentials",
  }
 ]
}
+++++
< 400
{
"status": "Error",
"errors": [
    {
    "code": 400,
    "message": "Username is not provideds,
    },
    {
    "code": 400,
    "message": "Password is not provideds"
    }
 ]
}
+++++
< 400
{
"status": "Error",
"errors": [
    {
    "code": 400,
    "message": "Username is not provideds,
    }
 ]
}
+++++
< 400
{
"status": "Error",
"errors": [
    {
    "code": 400,
    "message": "Password is not provideds"
    }
 ]
}


-- Owner/Super-Owner resource to edit owners

List all owners
GET /api/v1/admin/owners
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "data": [
        {
            "id": "5396002cb5282e71211d4f74",
            "name": {
              "familyName": "Zorg",
              "middleName": "Emmanuele",
              "givenName": "Jean Batist"
            },
            "root": true,
            "email": "owner@example.org",
            "roles": {
                "owner": true
            },
            "isBanned": false
        },
        {
            "id": "5396002f5d26169409f1b515",
            "name": {},
            "root": false,
            "email": "owner4906@example.org",
            "roles": {
                "owner": true
            },
            "isBanned": false
        }
    ]
}


List one of Owners
GET /api/v1/admin/owners/5396002cb5282e71211d4f74
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "data": {
        "id":"5396002cb5282e71211d4f74",
        "name":{
            "familyName":"Zorg",
            "middleName":"Emmanuele",
            "givenName":"Jean Batist"
        },
        "root":true,
        "email":"owner@example.org",
        "roles": {
         "owner":true
        },
        "isBanned":false
    }
}

Owner can create other owners
POST /api/v1/admin/owners
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json; charset=utf-8
{"email":"owner123@example.org", "password":"lalala"}
< 201
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email":"owner123@example.org",
  "name": {
    "familyName": "",
    "givenName": "",
    "middleName": ""
  },
  "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
  "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
  "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
  "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
  "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
  "root": true,
  "accountVerified": true
}

Update one of Owners. Is user is root, he can update other users, not myself only!!!
PUT /api/v1/admin/owners/5396002cb5282e71211d4f74
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebs
> Content-Type: application/json; charset=utf-8
{
    "name":{
      "familyName" : "Doe",
      "givenName" : "John",
      "middleName" : "Theodor"
    }
    "password":"somehardtoguestnewpassword",
}
< 202
< Content-Type: application/json
{
    "data": {
        "id":"5396002cb5282e71211d4f74",
        "name":{
            "familyName":"Zorg",
            "middleName":"Emmanuele",
            "givenName":"Jean Batist"
        },
        "root":true,
        "email":"owner@example.org",
        "roles": {
         "owner":true
        },
        "isBanned":false
    }
}


Ban(delete) one of Owners. Only accessible by root user.
DELETE /api/v1/admin/owners/5396002cb5282e71211d4f74
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebs
> Content-Type: application/json; charset=utf-8
< 202
< Content-Type: application/json
{
    "data": {
        "id":"5396002cb5282e71211d4f74",
        "name":{
            "familyName":"Zorg",
            "middleName":"Emmanuele",
            "givenName":"Jean Batist"
        },
        "root":true,
        "email":"owner@example.org",
        "roles": {
         "owner":true
        },
        "isBanned":true
    }
}


-- Owner resource to edit clients --

List all clients in JSON format
GET /api/v1/admin/clients
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
  "page": 1,
  "data": [
    {
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false,
      "telefone":"555-339-69-72",
      "localAddress":"Gothem city",
      "needQuestionnaire":true,
      "title":"Mr.",
      "roles":{
        "owner":false,
        "buyer":true,
        "seller":false
      },
      "isBanned":false
    },
    {
      "id": "536cfc8a886fcbba14d07dd7",
      "email": "janedoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "Jane",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/b7fc86f9d03e399ccc5aeec8ebbba013.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": true,
      "telefone":"555-339-69-72",
      "localAddress":"Gothem city",
      "needQuestionnaire":true,
      "title":"Mr.",
      "roles":{
        "owner":false,
        "buyer":true,
        "seller":false
      }
      "isBanned":true
    }
  ]
}


Owner gets one client by id
GET /api/v1/admin/clients/{:id}
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
  "data":{
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false,
      "telefone":"555-339-69-72",
      "localAddress":"Gothem city",
      "title":"Mr.",
      "needQuestionnaire":true,
      "roles":{
        "owner":false,
        "buyer":true,
        "seller":false
      },
      "isBanned":false
  }
}


Owner updates buyer. The behavior is actually patch - the fields mentioned in accepted request are only updated. https://oselot.atlassian.net/browse/ACR-108
PUT /api/v1/admin/clients/{:id}
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json; charset=utf-8
{
    "name":{
      "familyName" : "Doe",
      "givenName" : "John",
      "middleName" : "Theodor"
    }
    "email":"johndoe@example.org",
    "telefone":"555-339-69-72",
    "localAddress":"Gothem city",
    "needQuestionnaire":true,
    "title":"Mr.",
    "isBanned":false
}
< 201
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name":{
    "givenName": "John",
    "middleName": "Theodor"
    "familyName": "Doe"
  },
  "profile": {
    "needQuestionnaire": true
  },
  "title":"Mr.",
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "root": false,
  "isBanned":false
}
+++++
< 404
< Content-Type: application/json
{
    "error":"User with this ID do not exists!"
}



Create new client
POST /api/v1/admin/clients
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json; charset=utf-8
{"familyName" : "Doe", "givenName" : "John", "middleName" : "Theodor", "email":"johndoe@example.org","telefone":"555-339-69-72","localAddress":"Gothem city","title":"Mr.","needQuestionnaire":true}
< 202
< Content-Type: application/json
{
  "id": "536cfc8a886fcbba14d07dd6",
  "email": "johndoe@example.org",
  "name":{
    "givenName": "John",
    "middleName": "Theodor"
    "familyName": "Doe"
  },
  "profile": {
    "needQuestionnaire": true
  },
  "title":"Mr.",
  "telefone":"555-339-69-72",
  "localAddress":"Gothem city",
  "root": false
}

Send client notification email with welcome link
POST /api/v1/admin/clients/welcome/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 201
< Content-Type: application/json
{
    "message":"sent",
    "user": {
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false
    },
    "welcomeLink": "http://localhost:3000/buyer/welcome/c87ad6d9054337007fc38c11b468facfa567b2534a2ca01608551cddf4aa69551b9aa3a4ec27f0bdeaa34b60a90233c86b951837338526612cc2a9075c272004"
}


Owner resets clients password and sends notification email with welcome link
POST /api/v1/admin/clients/resetPassword/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json; charset=utf-8
< 201
< Content-Type: application/json
{
    "message":"sent",
    "user": {
      "id": "536cfc8a886fcbba14d07dd6",
      "email": "johndoe@example.org",
      "name": {
        "familyName": "Doe",
        "givenName": "John",
        "middleName": ""
      },
      "gravatar": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar30": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=30&d=wavatar&r=g",
      "gravatar50": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=50&d=wavatar&r=g",
      "gravatar80": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=80&d=wavatar&r=g",
      "gravatar100": "https://secure.gravatar.com/avatar/363c1b0cd64dadffb867236a00e62986.jpg?s=100&d=wavatar&r=g",
      "root": false,
      "accountVerified": false
    },
    "welcomeLink": "http://localhost:3000/buyer/welcome/c87ad6d9054337007fc38c11b468facfa567b2534a2ca01608551cddf4aa69551b9aa3a4ec27f0bdeaa34b60a90233c86b951837338526612cc2a9075c272004"
}


Ban(delete) one of Buyers. Accessible by Owners.
DELETE /api/v1/admin/clients/5396002cb5282e71211d4f74
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebs
> Content-Type: application/json; charset=utf-8
< 202
< Content-Type: application/json
{
    "data": {
        "id":"5396002cb5282e71211d4f74",
        "name":{
            "familyName":"Zorg",
            "middleName":"Emmanuele",
            "givenName":"Jean Batist"
        },
        "root":true,
        "email":"owner@example.org",
        "roles": {
         "owner":true
        },
        "isBanned":true
    }
}



-- Owner resource to edit products --

List all products
GET /api/v1/owner/products
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "metaData": {
        "totalPages": 1,
        "page": 1
    },
    "data": [
        {
            "id": "538b612c7f61bdb5eadffe25",
            "name": "Gemoroi 0",
            "bank": "Sperbank (testing)",
            "type": "MasterCard",
            "ncRating": "None",
            "bcRating": "None",
            "moRating": "None",
            "improvingShortCreditHistory": "None",
            "improvingBadCreditScore": "None",
            "improvingMaxedOutCredit": "None",
            "reportsToExperian": false,
            "reportsToEquifax": false,
            "reportsToTransunion": false,
            "notes": "This is your problem."
        },
        {
            "id": "539623e20f4faa3028f2b86c",
            "name": "SuperMega9379",
            "bank": "SuperMegaBank9379",
            "type": "MasterCard",
            "ncRating": "None",
            "bcRating": "Bronze",
            "moRating": "Silver",
            "improvingShortCreditHistory": "None",
            "improvingBadCreditScore": "None",
            "improvingMaxedOutCredit": "None",
            "reportsToExperian": false,
            "reportsToEquifax": false,
            "reportsToTransunion": false
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Authorization required!"
        }
    ]
}


Get one product by id
GET /api/v1/owner/products/537e7a9567b9f6d7f81d13b6
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "data": {
        "id":"537e7a9567b9f6d7f81d13b6",
        "name":"Visa Gemoroi 0",
        "bank":"Sperbank (testing)",
        "type":"MasterCard",
        "ncRating":"None",
        "bcRating":"None",
        "moRating":"None",
        "improvingShortCreditHistory": "None",
        "improvingBadCreditScore": "None",
        "improvingMaxedOutCredit": "None",
        "reportsToExperian":false
    }
}
+++++
< 404
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 404,
        "message": "Product with this id do not exists!"
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Authorization required!"
        }
    ]
}


Create new product
POST /api/v1/owner/products
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
{
    "name":"Visa Gemoroi 0",
    "bank":"Sperbank (testing)",
    "type":"MasterCard",
    "ncRating":"None",
    "bcRating":"Silver",
    "moRating":"Gold",
    "reportsToExperian":false,
    "reportsToEquifax": false,
    "reportsToTransunion": false,
    "improvingShortCreditHistory": "None",
    "improvingBadCreditScore": "Silver",
    "improvingMaxedOutCredit": "Gold",
    "notes":"Some notes seen only by Owners"
}
< 201
< Content-Type: application/json
{
    "data": {
        "name":"Visa Gemoroi 0",
        "bank":"Sperbank (testing)",
        "type":"MasterCard",
        "ncRating":"None",
        "bcRating":"Silver",
        "moRating":"Gold",
        "reportsToExperian":false,
        "reportsToEquifax": false,
        "reportsToTransunion": false,
        "improvingShortCreditHistory": "None",
        "improvingBadCreditScore": "Silver",
        "improvingMaxedOutCredit": "Gold",
        "notes":"Some notes seen only by Owners"
    }
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


Update (patch) product
PUT /api/v1/owner/products/{:id}
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
{
    "name":"Visa Gemoroi 0",
    "bank":"Sperbank (testing)",
    "type":"MasterCard",
    "ncRating":"None",
    "bcRating":"Silver",
    "moRating":"Gold",
    "reportsToExperian":false,
    "reportsToEquifax": false,
    "reportsToTransunion": false,
    "improvingShortCreditHistory": "None",
    "improvingBadCreditScore": "Silver",
    "improvingMaxedOutCredit": "Gold"
}
< 202
< Content-Type: application/json
{
    "data": {
        "name":"Visa Gemoroi 0",
        "bank":"Sperbank (testing)",
        "type":"MasterCard",
        "ncRating":"None",
        "bcRating":"Silver",
        "moRating":"Gold",
        "reportsToExperian":false,
        "reportsToEquifax": false,
        "reportsToTransunion": false,
        "improvingShortCreditHistory": "None",
        "improvingBadCreditScore": "Silver",
        "improvingMaxedOutCredit": "Gold"
    }
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


Delete product
DELETE /api/v1/owner/products/{:id}
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 202
< Content-Type: application/json
{"status": "deleted"}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 400
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 400,
        "message": "Product with this ID is used by Tradelines!"
        }
    ]
}
+++++
< 400
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 400,
        "message": "ID is not defined!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


-- Owner resource to edit tradelines --

List all tradelines
GET /api/v1/owner/tradelines
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "metaData": {},
    "data": [
        {
            "id": "537e7a957ba2f24310e3ecb5",
            "totalAus": 15,
            "usedAus": 0,
            "availableAus": 15,
            "creditLimit": 0,
            "cashLimit": 0,
            "balance": 100,
            "cost": 1000,
            "price":1100,
            "notes": "Some notes",
            "active":false,
            "seller": {
                "id": "536bd8b988dfc8adc31a1c44",
                "name": {},
                "gravatar": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
                "gravatar30": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=30&d=wavatar&r=g",
                "gravatar50": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=50&d=wavatar&r=g",
                "gravatar80": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
                "gravatar100": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=100&d=wavatar&r=g",
                "online": true
            },
            "product": {
                "id": "537e7a9567b9f6d7f81d13b6",
                "name": "Visa Gemoroi 0",
                "bank": "Sperbank (testing)",
                "reportsToExperian": false,
                "ncRating": "None",
                "bcRating": "None",
                "moRating": "None",
                "type": "MasterCard"
            },
            "ncRating": "None",
            "bcRating": "None",
            "moRating": "None"
        },
        {
            "id": "537e7a957ba2f24310e3ecb4",
            "totalAus": 15,
            "usedAus": 0,
            "availableAus": 15,
            "creditLimit": 0,
            "cashLimit": 0,
            "balance": 100,
            "cost": 1000,
            "price":1100,
            "notes": "Some notes",
            "active":true,
            "seller": {
                "id": "536bd8b988dfc8adc31a1c44",
                "name": {},
                "gravatar": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
                "gravatar30": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=30&d=wavatar&r=g",
                "gravatar50": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=50&d=wavatar&r=g",
                "gravatar80": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=80&d=wavatar&r=g",
                "gravatar100": "https://secure.gravatar.com/avatar/b5fca0fa34000c908d46313ed1d737e0.jpg?s=100&d=wavatar&r=g",
                "online": true
            },
            "product": {
                "id": "537e7a9567b9f6d7f81d13b6",
                "name": "Visa Gemoroi 0",
                "bank": "Sperbank (testing)",
                "reportsToExperian": false,
                "ncRating": "None",
                "bcRating": "None",
                "moRating": "None",
                "type": "MasterCard"
            },
            "ncRating": "None",
            "bcRating": "None",
            "moRating": "None"
        },
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


Get one tradeline
GET /api/v1/owner/tradelines/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "data": {
        "id": "539600305d26169409f1b51c",
        "active": false,
        "totalAus": 10,
        "usedAus": 5,
        "availableAus": 5,
        "creditLimit": 10000,
        "cashLimit": 10000,
        "currentBalance": 1000,
        "cost": 1000,
        "price": 1100,
        "seller": {
            "id": "5396002cb5282e71211d4f77",
            "name": {},
            "gravatar": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
            "gravatar30": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=30&d=wavatar&r=g",
            "gravatar50": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=50&d=wavatar&r=g",
            "gravatar80": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
            "gravatar100": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=100&d=wavatar&r=g",
            "online": false
        },
        "dateOpen": "2014-06-09T18:42:52.387Z",
        "product": {
            "id": "5396002f5d26169409f1b517",
            "name": "SuperMega593",
            "bank": "SuperMegaBank593",
            "reportsToExperian": false,
            "reportsToEquifax": false,
            "reportsToTransunion": false,
            "ncRating": "None",
            "bcRating": "Bronze",
            "moRating": "Silver",
            "type": "MasterCard"
        },
        "ncRating": "Silver",
        "bcRating": "Silver",
        "moRating": "Silver"
    },
    "changes": [
        {
            "seller":{
                 "id": "5396002cb5282e71211d4f77",
                "name": {},
                "gravatar": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar30": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=30&d=wavatar&r=g",
                "gravatar50": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=50&d=wavatar&r=g",
                "gravatar80": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar100": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=100&d=wavatar&r=g",
                "online": false
            },
            "issuer": {
                "id": "5396002cb5282e71211d4f77",
                "name": {},
                "gravatar": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar30": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=30&d=wavatar&r=g",
                "gravatar50": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=50&d=wavatar&r=g",
                "gravatar80": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar100": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=100&d=wavatar&r=g",
                "online": false
            },
            "tradeLine": "539600305d26169409f1b51c",
            "cost": 999,
            "currentBalance": 9999,
            "cashLimit": 9999,
            "creditLimit": 9999,
            "price": 1099,
            "usedAus": 6,
            "totalAus": 11,
            "product": "5396002f5d26169409f1b517",
            "createdAt": "2014-06-09T18:42:52.392Z",
            "active": false,
            "status": "pending",
            "availableAus": 5,
            "moRating": "Gold",
            "bcRating": "Bronze",
            "ncRating": "None",
            "id": "539600305d26169409f1b51d"
        }
    ]
}
+++++
< 404
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 404,
        "message": "Tradeline with this id do not exists!"
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


Update (patch) one tradeline, ratings can be 'None','Bronze','Silver','Gold'
PUT /api/v1/owner/tradelines/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
{
    "id": "537e7a957ba2f24310e3ecb4",
    "totalAus": 15,
    "usedAus": 0,
    "creditLimit": 0,
    "cashLimit": 0,
    "balance": 100,
    "cost": 1000,
    "price":1100,
    "notes": "Some notes",
    "seller": "536bd8b988dfc8adc31a1c44",
    "product": "537e7a9567b9f6d7f81d13b6",
    "ncRating": "None",
    "bcRating": "Bronze",
    "moRating": "Silver"
}
< 201
< Content-Type: application/json
{
    "data":{
        "id": "537e7a957ba2f24310e3ecb4",
        "totalAus": 15,
        "usedAus": 0,
        "creditLimit": 0,
        "cashLimit": 0,
        "balance": 100,
        "cost": 1000,
        "price":1100,
        "notes": "Some notes",
        "seller": "536bd8b988dfc8adc31a1c44",
        "product": "537e7a9567b9f6d7f81d13b6",
        "ncRating": "None",
        "bcRating": "Bronze",
        "moRating": "Silver"
    }
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}
+++++
< 400
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 400,
        "message": "Cost have to be bigger, than 0!",
        "field":"cost"
        }
    ]
}


Create tradeline, ratings can be 'None','Bronze','Silver','Gold'
POST /api/v1/owner/tradelines
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
{
    "totalAus": 15,
    "usedAus": 0,
    "creditLimit": 0,
    "cashLimit": 0,
    "balance": 100,
    "cost": 1000,
    "price":1100,
    "notes": "Some notes",
    "seller": "536bd8b988dfc8adc31a1c44",
    "product": "537e7a9567b9f6d7f81d13b6",
    "ncRating": "None",
    "bcRating": "Bronze",
    "moRating": "Silver"
}
< 201
< Content-Type: application/json
{
    "data": {
    "id": "537e7a957ba2f24310e3ecb4",
    "totalAus": 15,
    "usedAus": 0,
    "creditLimit": 0,
    "cashLimit": 0,
    "balance": 100,
    "cost": 1000,
    "price":1100,
    "notes": "Some notes",
    "seller": "536bd8b988dfc8adc31a1c44",
    "product": "537e7a9567b9f6d7f81d13b6",
    "ncRating": "None",
    "bcRating": "Bronze",
    "moRating": "Silver"
    }
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}
+++++
< 400
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 400,
        "message": "Cost have to be bigger, than 0!",
        "field":"cost"
        }
    ]
}


Send to archive one tradeline
DELETE /api/v1/owner/tradelines/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
< 202
< Content-Type: application/json
{
  "status":"Tradeline archived"
}
+++++
< 404
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 404,
        "message": "Tradeline with this ID do not exists!"
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


-- Sellers API for editing his/her tradelines --

List all products
GET /api/v1/seller/products
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "metaData": {
        "totalPages": 1,
        "page": 1
    },
    "data": [
        {
            "id": "5387a705cbba46cbe7fdef4b",
            "name": "Gemoroi 0",
            "bank": "Sperbank (testing)",
            "type": "MasterCard",
            "ncRating": "None",
            "bcRating": "None",
            "moRating": "None",
            "reportsToExperian": false,
            "reportsToEquifax": false,
            "reportsToTransunion": false
        },
        {
            "id": "5387a705cbba46cbe7fdef4c",
            "name": "Gemoroi 1",
            "bank": "Sperbank (testing)",
            "type": "MasterCard",
            "ncRating": "None",
            "bcRating": "None",
            "moRating": "None",
            "reportsToExperian": false,
            "reportsToEquifax": false,
            "reportsToTransunion": false
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


List all tradelines, belonging to Seller authenticated
GET /api/v1/seller/products
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "metaData": {},
    "data": [
        {
            "id": "53876e1e3b12c0f945c4987c",
            "totalAus": 15,
            "usedAus": 0,
            "creditLimit": 20000,
            "cashLimit": 0,
            "cost": 1000,
            "seller": "5370a4fa25777db9531ffa91",
            "dateOpen": "2014-05-29T17:27:58.243Z",
            "availableAus": 15,
            "product": {
                "id": "53876e1e6b7719ef31025220",
                "name": "Gemoroi 2",
                "bank": "Sperbank (testing)",
                "reportsToExperian": false,
                "reportsToEquifax": false,
                "reportsToTransunion": false,
                "ncRating": "None",
                "bcRating": "None",
                "moRating": "None",
                "type": "MasterCard"
            },
            "price": 1100,
            "ncRating": "Bronze",
            "bcRating": "Bronze",
            "moRating": "Bronze"
        },
        {
            "id": "53876e1e3b12c0f945c4987a",
            "totalAus": 15,
            "usedAus": 0,
            "creditLimit": 20000,
            "cashLimit": 0,
            "cost": 1000,
            "seller": "5370a4fa25777db9531ffa91",
            "dateOpen": "2014-05-29T17:27:58.243Z",
            "availableAus": 15,
            "product": {
                "id": "53876e1e6b7719ef31025220",
                "name": "Gemoroi 2",
                "bank": "Sperbank (testing)",
                "reportsToExperian": false,
                "reportsToEquifax": false,
                "reportsToTransunion": false,
                "ncRating": "None",
                "bcRating": "None",
                "moRating": "None",
                "type": "MasterCard"
            },
            "price": 1100,
            "ncRating": "Bronze",
            "bcRating": "Bronze",
            "moRating": "Bronze"
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


List one tradelines, belonging to Seller authenticated
GET /api/v1/seller/tradeline/5387a705a95bbc6c1e3fbad4
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
< 200
< Content-Type: application/json
{
    "data": {
        "id": "539600305d26169409f1b51c",
        "active": false,
        "totalAus": 10,
        "usedAus": 5,
        "availableAus": 5,
        "creditLimit": 10000,
        "cashLimit": 10000,
        "currentBalance": 1000,
        "cost": 1000,
        "price": 1100,
        "seller": {
            "id": "5396002cb5282e71211d4f77",
            "name": {},
            "gravatar": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
            "gravatar30": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=30&d=wavatar&r=g",
            "gravatar50": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=50&d=wavatar&r=g",
            "gravatar80": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
            "gravatar100": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=100&d=wavatar&r=g",
            "online": false
        },
        "dateOpen": "2014-06-09T18:42:52.387Z",
        "product": {
            "id": "5396002f5d26169409f1b517",
            "name": "SuperMega593",
            "bank": "SuperMegaBank593",
            "reportsToExperian": false,
            "reportsToEquifax": false,
            "reportsToTransunion": false,
            "ncRating": "None",
            "bcRating": "Bronze",
            "moRating": "Silver",
            "type": "MasterCard"
        },
        "ncRating": "Silver",
        "bcRating": "Silver",
        "moRating": "Silver"
    },
    "changes": [
        {
            "seller": {
                "id": "5396002cb5282e71211d4f77",
                "name": {},
                "gravatar": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar30": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=30&d=wavatar&r=g",
                "gravatar50": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=50&d=wavatar&r=g",
                "gravatar80": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar100": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=100&d=wavatar&r=g",
                "online": false
            },
            "issuer": {
                "id": "5396002cb5282e71211d4f77",
                "name": {},
                "gravatar": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar30": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=30&d=wavatar&r=g",
                "gravatar50": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=50&d=wavatar&r=g",
                "gravatar80": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=80&d=wavatar&r=g",
                "gravatar100": "https://secure.gravatar.com/avatar/115fbf4f18739a0a8ce60c49c9e85af1.jpg?s=100&d=wavatar&r=g",
                "online": false
            },
            "tradeLine": "539600305d26169409f1b51c",
            "cost": 999,
            "currentBalance": 9999,
            "cashLimit": 9999,
            "creditLimit": 9999,
            "price": 1099,
            "usedAus": 6,
            "totalAus": 11,
            "product": "5396002f5d26169409f1b517",
            "createdAt": "2014-06-09T18:42:52.392Z",
            "active": false,
            "status": "pending",
            "availableAus": 5,
            "moRating": "Gold",
            "bcRating": "Bronze",
            "ncRating": "None",
            "id": "539600305d26169409f1b51d"
        }
    ]
}
+++++
< 404
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 404,
        "message": "Tradeline with this id do not exists!"
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}


Create tradeline, ratings can be 'None','Bronze','Silver','Gold'
POST /api/v1/seller/tradelines
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
{
    "totalAus": 15,
    "usedAus": 0,
    "creditLimit": 0,
    "cashLimit": 0,
    "balance": 100,
    "cost": 1000,
    "price":1100,
    "product": "537e7a9567b9f6d7f81d13b6",
    "ncRating": "None",
    "bcRating": "Bronze",
    "moRating": "Silver"
}
< 201
< Content-Type: application/json
{
    "data": {
    "id": "537e7a957ba2f24310e3ecb4",
    "totalAus": 15,
    "usedAus": 0,
    "availableAus": 15,
    "creditLimit": 0,
    "cashLimit": 0,
    "balance": 100,
    "cost": 1000,
    "product": "537e7a9567b9f6d7f81d13b6",
    "ncRating": "None",
    "bcRating": "Bronze",
    "moRating": "Silver"
    }
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}
+++++
< 400
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 400,
        "message": "Cost have to be bigger, than 0!",
        "field":"cost"
        }
    ]
}


Update (patch) one tradeline, ratings can be 'None','Bronze','Silver','Gold'
PUT /api/v1/seller/tradelines/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
{
    "id": "537e7a957ba2f24310e3ecb4",
    "totalAus": 15,
    "usedAus": 0,
    "creditLimit": 0,
    "cashLimit": 0,
    "balance": 100,
    "cost": 1000,
    "price":1100,
    "seller": "536bd8b988dfc8adc31a1c44",
    "product": "537e7a9567b9f6d7f81d13b6",
    "ncRating": "None",
    "bcRating": "Bronze",
    "moRating": "Silver"
}
< 201
< Content-Type: application/json
{
    "data":{
        "id": "537e7a957ba2f24310e3ecb4",
        "totalAus": 15,
        "usedAus": 0,
        "availableAus": 15,
        "creditLimit": 0,
        "cashLimit": 0,
        "balance": 100,
        "cost": 1000,
        "price":1100,
        "product": "537e7a9567b9f6d7f81d13b6",
        "ncRating": "None",
        "bcRating": "Bronze",
        "moRating": "Silver"
    }
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}
+++++
< 400
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 400,
        "message": "Cost have to be bigger, than 0!",
        "field":"cost"
        }
    ]
}


Send to archive one tradeline
DELETE /api/v1/seller/tradelines/:id
> huntKey:iaqcodytumioxrunxvyemsebsviaqcodytumioxrunxvyemsebsv
> Content-Type: application/json
< 202
< Content-Type: application/json
{
  "status":"Tradeline archived"
}
+++++
< 404
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 404,
        "message": "Tradeline with this ID do not exists!"
        }
    ]
}
+++++
< 403
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 403,
        "message": "Access denied!"
        }
    ]
}
+++++
< 401
< Content-Type: application/json
{
    "status": "Error",
    "errors": [
        {
        "code": 401,
        "message": "Authorization required!"
        }
    ]
}
